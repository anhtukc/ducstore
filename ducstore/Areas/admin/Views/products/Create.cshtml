@model ducstore.Models.product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/admin/Views/Shared/_adminlayout.cshtml";
}


<div class="form-create">
    @using (Html.BeginForm("Create", "products", FormMethod.Post, new { enctype = "multipart/form-data" })) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                    @Html.LabelFor(model => model.productid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.productid, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.productid, "", new { @class = "text-danger" })
                        </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.typeproductid, "typeproductid", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                            @Html.DropDownList("typeproductid", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.typeproductid, "", new { @class = "text-danger" })
                        </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.providerid, "providerid", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                            @Html.DropDownList("providerid", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.providerid, "", new { @class = "text-danger" })
                        </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.productname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.productname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.productname, "", new { @class = "text-danger" })
                        </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.promotion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.promotion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.promotion, "", new { @class = "text-danger" })
                        </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.picture, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="picture"/>
                        </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                        </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
                        </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                        </div>
            </div>

                <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Tạo" class="btn btn-primary" />
                    @Html.ActionLink("Quay lại", "Index", "", new {@class = "btn btn-default" })
                </div>
            </div>
        </div>
    }

    
</div>
